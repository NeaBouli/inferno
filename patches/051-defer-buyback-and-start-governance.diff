*** Begin Patch
diff --git a/docs/README.md b/docs/README.md
index 0036cb069f5fed6be5ab861eac4567f2e6eec969..7b4c9b5b1c0a6a0c4e3b1d9b0a7d331e6c8b56e1 100644
--- a/docs/README.md
+++ b/docs/README.md
@@ -38,6 +38,22 @@ inferno
üìù Status-Updates (Changelog)
[2025-09-23] Presale Contract implementiert, getestet, dokumentiert ‚Üí Presale üü¢

[2025-09-23] Vesting Contract implementiert, getestet, dokumentiert ‚Üí Vesting üü¢

[2025-09-24] BuybackVault implementiert, Tests fehlerhaft ‚Üí Buyback üî¥

[2025-09-25] Root-README.md √ºberschrieben (zweisprachig) ‚Üí Dokumentation aktualisiert

[2025-09-25] Baumdarstellung in docs/README.md final als fenced block gesetzt (Patch DocFix)

[2025-09-26] BuybackVault-Debugging pausiert (Deferral) ‚Üí BUG-001 dokumentiert; Start Governance-ADR (Task 6)

+---
+
+## üöß Bekannte Probleme (Open Issues)
+
+BUG-001 ‚Äì Buyback/MockRouter Compile-Fehler
+- Symptom: TypeError: Contract or array type expected in contracts/mocks/MockRouter.sol bei Array-Allokation.
+- Erwartetes Fix-Pattern: amounts = new uint256; in getAmountsOut() und swapExactETHForTokens() (beide R√ºckgabearrays).
+- Status: Fixversuche eingespielt, Fehler persistiert (Verdacht: Arbeitskopie ‚â† Repo-Inhalt oder Stale Artifacts).
+- N√§chste Checks (siehe Report): Suchlauf nach new uint256 (, Hardhat-Cache leeren, Solc-Version pinnen, Artefakte/Cache aufr√§umen.
+
+Entscheidung: Buyback bleibt üî¥ (deferred) bis BUG-001 geschlossen ist; Governance-Spezifikation startet parallel (ohne on-chain √Ñnderungen).
diff --git a/logs/project.log b/logs/project.log
index dd81ef9cb9b0261f2307e0d1aca3fa410aa1df4d..94b4b6b4b5f6e0d2a3a9cde7bc6f1b3b8f0b7f11 100644
--- a/logs/project.log
+++ b/logs/project.log
@@ -6,3 +6,5 @@
[2025-09-25 16:22] DocFix1 DOCS ‚Äì WHITEPAPER.md (DE) bef√ºllt
[2025-09-25 16:24] DocFix1 DOCS ‚Äì WHITEPAPER_EN.md (EN) bef√ºllt
[2025-09-25 16:45] DocFix1 DOCS ‚Äì README Baum erneut √ºberschrieben und best√§tigt
+[2025-09-26 16:40] Main DEVA BUG ‚Äì Buyback/MockRouter Compile-Fehler persistiert (BUG-001). BuybackVault bleibt üî¥; Debugging vertagt (Deferral).
+[2025-09-26 16:41] Main DEVA PLAN ‚Äì Governance (Task 6) gestartet: ADR zu Rollen/Parametern/Timelock angelegt; keine on-chain √Ñnderungen.
diff --git a/docs/reports/bug-001-buyback-mockrouter.md b/docs/reports/bug-001-buyback-mockrouter.md
new file mode 100644
--- /dev/null
+++ b/docs/reports/bug-001-buyback-mockrouter.md
@@ -0,0 +1,83 @@
+# BUG-001 ‚Äî Buyback/MockRouter Compile-Fehler
+
+Status: offen (üî¥) ¬∑ Betroffene Bereiche: contracts/mocks/MockRouter.sol, BuybackVault-Tests
+Symptom: Hardhat/solc bricht ab mit
+TypeError: Contract or array type expected. bei Array-Allokation in MockRouter.sol.
+
+## Reproduktion
+1. npx hardhat clean && npx hardhat compile
+2. npx hardhat test test/BuybackVault.test.js
+3. Fehler tritt in getAmountsOut() bzw. swapExactETHForTokens() auf.
+
+## Erwartetes Verhalten
+R√ºckgabe-Arrays werden mit new uint256 erzeugt; Compile l√§uft durch.
+
+## Beobachtetes Verhalten
+Compiler zeigt, dass Klammer-Allokation erkannt wird (new uint256 (2)), obwohl Repo-Stand new uint256 enth√§lt.
+
+## Hypothesen
+- Arbeitskopie ‚â† Repo-Stand: Lokale Datei unterscheidet sich; bitte Stringsuche.
+- Stale Artifacts/Cache: Alte Build-Outputs maskieren den Fix (Cache/Artifacts l√∂schen).
+- Hardhat/Ethers/solc-Drift: Tooling-Versionen oder lokaler Solc-Fetch st√∂ren.
+
+## N√§chste Checks (lokal)
+- Suche nach Alt-Syntax:

grep -R "new uint256 (" -n contracts test
+- Build-Bereinigung:

rm -rf artifacts cache && npx hardhat clean && npx hardhat compile
+- Solc pinnen (bereits vorbereitet): Hardhat nutzt lokale solc@0.8.26.
+- Sicherstellen, dass beide Arrays korrigiert sind:

getAmountsOut: uint256;

swapExactETHForTokens: uint256;

+## Workarounds (falls n√∂tig)
+- Kurzfristig Buyback-Tests skippen und Governance fortf√ºhren (ohne Deploy).
+- Router in separatem Patch minimalisieren (nur f√ºr Tests) ‚Äî erst nach R√ºcksprache.
+
+## Exit-Kriterien
+- npx hardhat compile gr√ºn
+- npx hardhat test test/BuybackVault.test.js kompiliert und l√§uft bis zu Logikfehlern (falls weitere Asserts)
+
+## Verantwortlich / Handover
+- DebugDev √ºbernimmt bei n√§chster Runde; Referenz: dieses Dokument + Logs.
diff --git a/arch/decisions/ADR-0006-buyback-deferral.md b/arch/decisions/ADR-0006-buyback-deferral.md
new file mode 100644
--- /dev/null
+++ b/arch/decisions/ADR-0006-buyback-deferral.md
@@ -0,0 +1,44 @@
+# ADR-0006 ‚Äî Aufschub BuybackVault-Debugging (Deferral) & Fokuswechsel
+
+Datum: 2025-09-26
+Status: Angenommen
+
+## Kontext
+BuybackVault (Task 5) ist auf üî¥ blockiert (Compile-Fehler in MockRouter). Mehrere Fix-Versuche wurden eingespielt, der Hardhat-Compile bleibt jedoch rot.
+
+## Entscheidung
+- Buyback/Dex-Tests werden tempor√§r aufgeschoben (Deferral).
+- Governance (Task 6) startet mit ADR/Spezifikation (ohne Contract-Code) ‚Äî Vorbereitung f√ºr sp√§tere Integration.
+
+## Begr√ºndung
+- Verhindert Leerlauf und erm√∂glicht Fortschritt an unabh√§ngiger Spezifikation.
+- Reduziert Kontext-Switching, dokumentiert klaren Bug-Status (BUG-001).
+
+## Konsequenzen
+- Buyback bleibt üî¥ bis BUG-001 gel√∂st ist.
+- Governance-Schnittstellen werden vorbereitet; sp√§tere Anbindung von BuybackVault via Rollen/Timelock.
+
+## Follow-ups
+- BUG-001 schlie√üen (siehe docs/reports/bug-001-buyback-mockrouter.md).
+- Danach Governance-Implementierung freigeben.
diff --git a/docs/governance/ADR-010-governance-params-roles.md b/docs/governance/ADR-010-governance-params-roles.md
new file mode 100644
--- /dev/null
+++ b/docs/governance/ADR-010-governance-params-roles.md
@@ -0,0 +1,96 @@
+# ADR-010 ‚Äî Governance: Rollen, Timelock & Parametrisierung
+
+Ziel: Festlegung der Governance-Schnittstellen (ohne Implementierung), damit abh√§ngige Module (Token, Presale, Vesting, Buyback) klar angebunden werden k√∂nnen.
+
+## Rollenmodell
+- Governor (Multi-Sig/DAO): darf Parameter √§ndern, Strategien tauschen, Exempt-Listen pflegen.
+- Guardian (Emergency): darf pausieren/entpausieren (globale Pause einzelner Module).
+
+## Timelock
+- Verz√∂gerte Param-Updates (z. B. 24‚Äì48h) mit On-chain-Nachweis.
+- Ausnahmen/Bypass nur f√ºr pause()/unpause() durch Guardian.
+
+## Steuerbare Parameter (Beispiele)
+- Token (IFR): Geb√ºhrenanteile (SenderBurn, RecipientBurn, PoolFee), FeeExempt-Eintr√§ge.
+- Presale: Caps/Phasen, Pausen-Schalter.
+- Vesting: (i. d. R. fix nach Deploy; Pause nur f√ºr Notf√§lle).
+- BuybackVault: burnShareBps, cooldown, slippageBps, router-Adresse, treasury-Adresse.
+
+## Schnittstellen (Signaturen ‚Äì vorl√§ufig)
+- setFees(uint16 senderBps, uint16 recipientBps, uint16 poolBps)
+- setFeeExempt(address who, bool isExempt)
+- setBuybackParams(uint16 burnShareBps, uint32 cooldown, uint16 slippageBps, address router, address treasury)
+- pause() / unpause() an zentralen Modulen (guardian/gov)
+
+## Ereignisse
+- ParamsUpdated(...) je Modul
+- Paused(address) / Unpaused(address)
+- Buyback-spezifisch: BuybackExecuted(...)
+
+## Sicherheitsnotizen
+- Role Matrix dokumentieren (wer darf was).
+- 2-Man-Rule optional in Admin-Konsole (UI-Best√§tigung).
+- Simulation/Dry-Run verpflichtend vor kritischen Param-√Ñnderungen.
+
+## Auswirkungen auf andere Teams
+- Indexer: Events aufnehmen (ParamsUpdated/Paused/Unpaused).
+- Backend: Read-Only Endpunkte f√ºr aktuellen Param-Stand.
+- UI: Admin-Flows (HW-Wallet), Investor-Transparenzseiten.
+
+## Abnahmekriterien (nach Implementierung)
+- Rollentests (negativ/positiv), Timelock-Delay, Pause-Semantik, Events korrekt.
*** End Patch
