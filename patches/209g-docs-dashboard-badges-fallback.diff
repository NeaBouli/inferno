*** Begin Patch
diff --git a/scripts/docs-dashboard-badges.js b/scripts/docs-dashboard-badges.js
@@
-const dashboardPath = path.join(root, "reports", "docs-dashboard.html");
-if (!fs.existsSync(dashboardPath)) {
-  console.error(`‚ùå Dashboard not found: ${dashboardPath}`);
-  process.exit(1);
-}
+// üîÅ Dashboard-Suchlogik (lokal + Fallback)
+let dashboardPath = path.join(root, "reports", "docs-dashboard.html");
+if (!fs.existsSync(dashboardPath)) {
+  const tmpBase = "/var/folders/mp";
+  let found = null;
+  try {
+    // macOS Temp-Unterstruktur erkennen (z. B. /var/folders/mp/vsm4q.../T/)
+    const subfolders = fs.readdirSync(tmpBase).filter(f => !f.startsWith('.'));
+    for (const sub of subfolders) {
+      const subPath = path.join(tmpBase, sub, 'T');
+      if (fs.existsSync(subPath)) {
+        const tmpDirs = fs.readdirSync(subPath).filter(d => d.includes('inferno-site'));
+        for (const dir of tmpDirs) {
+          const candidate = path.join(subPath, dir, '_site', 'reports', 'docs-dashboard.html');
+          if (fs.existsSync(candidate)) {
+            found = candidate;
+            break;
+          }
+        }
+      }
+      if (found) break;
+    }
+  } catch (err) {
+    console.error("‚ö†Ô∏è  Temp search failed:", err.message);
+  }
+
+  if (found) {
+    console.log(`‚öôÔ∏è  Using fallback dashboard path: ${found}`);
+    dashboardPath = found;
+  } else {
+    console.error(`‚ùå Dashboard not found in reports or temp directories.`);
+    process.exit(1);
+  }
+}
*** End Patch
